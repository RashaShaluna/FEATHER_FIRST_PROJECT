<%- include('../layouts/header') %>
<style>
    .toast {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: black;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    display: flex;
    align-items: center;
    z-index: 1000;
    opacity: 0.9;
}

.toast-icon {
    margin-right: 10px; /* Spacing for the icon */
}

</style>
<body>
 
        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Shopping Cart<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Shopping Cart</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="cart">
	                <div class="container">
	                	<div class="row">
	                		<div class="col-lg-9">
	                			<table class="table table-cart table-mobile">
									<thead>
										<tr>
											<th>Product</th>
											<th>Price</th>
											<th>Quantity</th>
											<th>Total</th>
											<th></th>
										</tr>
									</thead>

									<tbody>
                                        <% if (products && products.length > 0) { %>
                                            <% products.forEach(item => { %>
                                            <tr>
											<td class="product-col">
												<div class="product">
													<figure class="product-media">
														<a href="/product/<%= item.productId._id %>">
                                            <img src="/uploads/<%= item.productId.images[0] %>" alt="Product image">
														</a>
													</figure>

													<h3 class="product-title">
														<a href="/product/<%= item.productId._id %>"><%= item.productId.name %></a>
													</h3><!-- End .product-title -->
												</div><!-- End .product -->
											</td>
                                            <% if(item.productId.quantity <= 0 || item.productId.status == 'Out of stock') { %>
                                                <td></td>
                                                <td class="out-of-stock-col"><span class="out-of-stock" style="font-weight:bold" >OUT OF STOCK</span></td>
                                                <td></td>
                                                <% }else{ %>
                                                    <td class="price-col">â‚¹<%= item.productId.offerprice %></td>
                                                    <td class="quantity-col">
                                                        <div class="cart-product-quantity">
                                                            <input 
                                                                type="number" 
                                                                class="form-control" 
                                                                value="<%= item.quantity %>" 
                                                                min="1" 
                                                                max="<%= item.productId.quantity %>" 
                                                                step="1" 
                                                                data-product-id="<%= item.productId._id %>"
                                                                data-offerprice="<%= item.productId.offerprice %>"
                                                                data-available-stock="<%= item.productId.quantity %>"
                                                                onChange="updateQuantity(this, '<%= item.productId._id %>')"
                                                            />
                                                        </div>
                                                    </td>                                                   
                                                    <td class="total-col" id="total-<%= item.productId._id %>">$<%= (item.productId.offerprice * item.quantity).toFixed(2) %></td>
											<% } %>
											<td class="remove-col"><button class="btn-remove" onclick="removeFromCart('<%= item.productId._id %>')"><i class="icon-close"></i></button></td>
										</tr>
										<% }); %>
                                        <% }; %>

									</tbody>
								</table><!-- End .table table-wishlist -->

	                			<div class="cart-bottom">
			            			<div class="cart-discount">
			            				<form action="#">
			            					<div class="input-group">
				        						<input type="text" class="form-control" required placeholder="coupon code">
				        						<div class="input-group-append">
													<button class="btn btn-outline-primary-2" type="submit"><i class="icon-long-arrow-right"></i></button>
												</div><!-- .End .input-group-append -->
			        						</div><!-- End .input-group -->
			            				</form>
			            			</div><!-- End .cart-discount -->

			            			<a href="#" class="btn btn-outline-dark-2"><span>UPDATE CART</span><i class="icon-refresh"></i></a>
		            			</div><!-- End .cart-bottom -->
	                		</div><!-- End .col-lg-9 -->
	                		<aside class="col-lg-3">
	                			<div class="summary summary-cart">
	                				<h3 class="summary-title">Cart Total</h3><!-- End .summary-title -->

	                				<table class="table table-summary">
	                					<tbody>
	                						<tr class="summary-subtotal">
	                							<td>Subtotal:</td>
	                							<td>$160.00</td>
	                						</tr><!-- End .summary-subtotal -->
	                						<tr class="summary-shipping">
	                							<td>Shipping:</td>
	                							<td>&nbsp;</td>
	                						</tr>

	                						<tr class="summary-shipping-row">
	                							<td>
													<div class="custom-control custom-radio">
														<input type="radio" id="free-shipping" name="shipping" class="custom-control-input">
														<label class="custom-control-label" for="free-shipping">Free Shipping</label>
													</div><!-- End .custom-control -->
	                							</td>
	                							<td>$0.00</td>
	                						</tr><!-- End .summary-shipping-row -->

	                						<tr class="summary-shipping-row">
	                							<td>
	                								<div class="custom-control custom-radio">
														<input type="radio" id="standart-shipping" name="shipping" class="custom-control-input">
														<label class="custom-control-label" for="standart-shipping">Standart:</label>
													</div><!-- End .custom-control -->
	                							</td>
	                							<td>$10.00</td>
	                						</tr><!-- End .summary-shipping-row -->

	                						<tr class="summary-shipping-row">
	                							<td>
	                								<div class="custom-control custom-radio">
														<input type="radio" id="express-shipping" name="shipping" class="custom-control-input">
														<label class="custom-control-label" for="express-shipping">Express:</label>
													</div><!-- End .custom-control -->
	                							</td>
	                							<td>$20.00</td>
	                						</tr><!-- End .summary-shipping-row -->

	                						<tr class="summary-shipping-estimate">
	                							<td>Estimate for Your Country<br> <a href="dashboard.html">Change address</a></td>
	                							<td>&nbsp;</td>
	                						</tr><!-- End .summary-shipping-estimate -->

	                						<tr class="summary-total">
	                							<td>Total:</td>
	                							<td>$160.00</td>
	                						</tr><!-- End .summary-total -->
	                					</tbody>
	                				</table><!-- End .table table-summary -->

	                				<a href="checkout.html" class="btn btn-outline-primary-2 btn-order btn-block">PROCEED TO CHECKOUT</a>
	                			</div><!-- End .summary -->

		            			<a href="category.html" class="btn btn-outline-dark-2 btn-block mb-3"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
	                		</aside><!-- End .col-lg-3 -->
	                	</div><!-- End .row -->
	                </div><!-- End .container -->
                    <div id="toast" class="toast" style="display: none;">
                        <span class="toast-icon">&#10004;</span> <!-- Success Tick -->
                        <span id="toast-message">Quantity updated successfully!</span>
                    </div>
                    
                </div><!-- End .cart -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

        <%- ('../layouts/footer') %>
</body>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="path/to/your/script.js"></script>

<script>

async function removeFromCart(productId) {
    const { value: confirmDelete } = await Swal.fire({
        text: "Are you sure want to remove this item ?",
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    });

    if (confirmDelete) {
        try {
            const response = await fetch('/removeFromCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId }),
            });

            const data = await response.json();
            if (response.ok) {
                // Successfully removed the item, update the UI accordingly
                document.getElementById(`total-${productId}`).closest('tr').remove();
                Swal.fire('Deleted!', 'Product removed from cart successfully.', 'success');
            } else {
                // Handle errors
                Swal.fire('Error!', data.message, 'error');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire('Error!', 'An error occurred while trying to remove the product from the cart.', 'error');
        }
    }
}






























document.addEventListener('DOMContentLoaded', () => {
    // Select all quantity inputs
    const quantityInputs = document.querySelectorAll('.form-control[type="number"]');

    // Add event listeners to each input
    quantityInputs.forEach(input => {
        input.addEventListener('change', function() {
            const productId = this.dataset.productId;
            const price = parseFloat(this.dataset.price);
            const availableStock = parseInt(this.dataset.availableStock);

            updateQuantity(this, productId, price, availableStock);
        });
    });
});

function updateTotalPrice(quantityInput, offerprice) {
    const quantity = parseInt(quantityInput.value);
    const total = quantity * offerprice;
    const totalCell = document.getElementById(`total-${quantityInput.closest('tr').dataset.productId}`);
    totalCell.innerHTML = `$${total.toFixed(2)}`; // Format to two decimal places
}


function updateQuantity(quantityInput, productId, offerPrice, availableStock) {
  const quantity = parseInt(quantityInput.value);

  // Ensure valid input
  if (isNaN(quantity) || quantity < 1) {
    alert('Quantity must be at least 1.');
    quantityInput.value = 1; // Reset to 1
    return;
  }

  // Check if the quantity exceeds available stock
  if (quantity > availableStock) {
    alert(`You cannot select more than ${availableStock} items.`);
    quantityInput.value = availableStock; // Set to max available
    return;
  }

  // Calculate and update total price for the product
  const totalPriceElement = document.querySelector(`#offerprice-${productId}`);
  const newTotalPrice = quantity * offerPrice;

  if (totalPriceElement) {
    totalPriceElement.innerText = newTotalPrice.toFixed(2); // Update UI
  } else {
    console.error(`Element with ID #offerprice-${productId} not found`);
  }

  // Send AJAX request to update quantity in the backend
  fetch(`/cart/update-quantity/${productId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ quantity }),
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
      
        console.log('Quantity updated successfully:', data);
        updateQuantity();
        showToast('Quantity updated successfully');
        
      } else {
        alert('Failed to update quantity');
        console.error(data.message);
      }
    })
    .catch(error => {
      console.error('Error updating quantity:', error);
    });
}


</script>
<!-- molla/cart.html  22 Nov 2019 09:55:06 GMT -->
</html>