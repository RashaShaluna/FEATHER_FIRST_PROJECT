<script>
  

// razorpay payment
const createOrder = async (req, res) => {
    try {
        log('razor')
        const { amount } = req.body;
        const options = {
            amount: amount * 100, // amount in the smallest currency unit
            currency: 'INR',
            receipt: `receipt#${Math.floor(Math.random() * 10000)}`
        };
        log('doinggg')
        const order = await razorpay.orders.create(options);
        console.log('done')
        res.status(200).json(order);
    } catch (error) {
        console.error(error);
        res.status(500).json(error);
    }
};


const verifyRazorpay = async(req,res)=>{
     try{
        log('in verifying payment')
        const { razorpay_order_id, razorpay_payment_id, razorpay_signature } = req.body;
        
        const body = razorpay_order_id + "|" + razorpay_payment_id;
        const expectedSignature = crypto
            .createHmac('sha256', process.env.RAZORPAY_SECRET_KEY)
            .update(body.toString())
            .digest('hex');
    
        const isAuthentic = expectedSignature === razorpay_signature;
    
        if (isAuthentic) {
            res.json({ success: true, message: 'Payment verified successfully' });
        } else {
            res.status(400).json({ success: false, message: 'Payment verification failed' });
        }
     }catch(error){
        log('payment error',error)
      res.redirect('/serverError')
     }
}



document.getElementById('procced-btn').onclick = async function() {
            const response = await fetch('/createOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            const order = await response.json();

            const options = {
                key: 'RAZORPAY_ID_KEY ', 
                amount: order.amount,
                currency: order.currency,
                name: "Feather",
                description: "Test Transaction",
                order_id: order.id,
                handler: async function (response) {
                    try {
                        const verificationResponse = await fetch('/verifyPayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(response)
                        });
                        const data = await verificationResponse.json();
                        
                        if (data.success) {
                            alert('Payment successful!');
                        } else {
                            alert('Payment verification failed.');
                        }
                    } catch (error) {
                        alert('Error verifying payment');
                        console.error(error);
                    }
                },
                prefill: {
                    name: "Test Customer",
                    email: "test@example.com",
                    contact: "9999999999"
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp1 = new Razorpay(options);
            rzp1.open();
        };

</script>

<%- include("../partials/admin/header") %>

<div class="container mt-4">
    <h1 class="mb-3 text-center">Dashboard</h1>

    <!-- Sales Report Button -->
    <div class="d-flex justify-content-end mb-3">
        <a href="salesReport" class="btn btn-primary">Get Sales Report</a>
    </div>

    <!-- Month, Year, and Chart Selector -->
    <div class="card mb-4">
        <div class="card-body">
            <form id="chartForm">
                <div class="row">
                    <div class="col-md-3">
                        <label for="month">Select Month:</label>
                        <select name="month" id="month" class="form-control">
                            <option value="1" <%= month === 1 ? 'selected' : '' %>>January</option>
                            <option value="2" <%= month === 2 ? 'selected' : '' %>>February</option>
                            <option value="3" <%= month === 3 ? 'selected' : '' %>>March</option>
                            <option value="4" <%= month === 4 ? 'selected' : '' %>>April</option>
                            <option value="5" <%= month === 5 ? 'selected' : '' %>>May</option>
                            <option value="6" <%= month === 6 ? 'selected' : '' %>>June</option>
                            <option value="7" <%= month === 7 ? 'selected' : '' %>>July</option>
                            <option value="8" <%= month === 8 ? 'selected' : '' %>>August</option>
                            <option value="9" <%= month === 9 ? 'selected' : '' %>>September</option>
                            <option value="10" <%= month === 10 ? 'selected' : '' %>>October</option>
                            <option value="11" <%= month === 11 ? 'selected' : '' %>>November</option>
                            <option value="12" <%= month === 12 ? 'selected' : '' %>>December</option>
                        </select>
                    </div>
    
                    <div class="col-md-3">
                        <label for="year">Select Year:</label>
                        <select name="year" id="year" class="form-control">
                            <option value="2024" <%= year === 2024 ? 'selected' : '' %>>2024</option>
                            <option value="2023" <%= year === 2023 ? 'selected' : '' %>>2023</option>
                            <option value="2022" <%= year === 2022 ? 'selected' : '' %>>2022</option>
                        </select>
                    </div>
    
                    <div class="col-md-3">
                        <label for="chartType">Chart By:</label>
                        <select name="chartType" id="chartType" class="form-control">
                            <option value="monthly" <%= chartType === 'monthly' ? 'selected' : '' %>>Monthly</option>
                            <option value="yearly" <%= chartType === 'yearly' ? 'selected' : '' %>>Yearly</option>
                        </select>
                    </div>
    
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary">Generate Chart</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card mb-4" style="margin-bottom: 50px;">
        <div class="card-header text-center">
            <h4>Product Status Chart</h4>
        </div>
        <div class="card-body">
            <canvas id="productStatusChart" style="height: 500px;"></canvas>
        </div>
    </div>

    

    <!-- Top Products and Categories Section -->
    <div class="row">
        <!-- Top Products -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header text-center">
                    <h4>Top 10 Products in Sales</h4>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        <% topProducts.forEach(product => { %>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><%= product.productName %></span>
                                <span><%= product.totalSoldItems %> Sold</span>
                            </li>
                        <% }) %>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Top Categories -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header text-center">
                    <h4>Top 10 Categories in Sales</h4>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        <% topCategories.forEach(category => { %>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><%= category.name %></span>
                                <span><%= category.totalSoldItems %> Sold</span>
                            </li>
                        <% }) %>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include("../partials/admin/footer") %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.getElementById('chartForm').addEventListener('submit', function (event) {
        event.preventDefault();

        const month = document.getElementById('month').value;
        const year = document.getElementById('year').value;
        const chartType = document.getElementById('chartType').value;

        const url = `/admin/dashboard?month=${month}&year=${year}&chartType=${chartType}`;
        window.location.href = url;
    });

    // Product Status Chart
    const productStatusCtx = document.getElementById('productStatusChart').getContext('2d');
    const productStatusData = [<%= productStatus.delivered %>, <%= productStatus.returned %>, <%= productStatus.shipped %>, <%= productStatus.pending %>, <%= productStatus.processing %>];

    new Chart(productStatusCtx, {
        type: 'bar',
        data: {
            labels: ['Delivered', 'Returned', 'Shipped', 'Pending', 'Processing'],
            datasets: [{
                label: 'Product Status',
                data: productStatusData,
                backgroundColor: ['green', 'red', 'blue', 'yellow', 'orange'],
            }]
        },
        options: {
            responsive: true,
            scales: { y: { beginAtZero: true } },
            plugins: {
                legend: { position: 'top' },
                title: { display: true, text: 'Product Status (Monthly/Yearly)' }
            }
        }
    });

</script>


<%- include('../layouts/header') %>
   
<style>

    .main-container {
        flex-grow: 1;
        padding: 1rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    .header-section {
        border-bottom: 1px solid #eee;
        padding: 1rem 0;
        margin-bottom: 2rem;
    }

    .breadcrumb {
        margin-bottom: 2rem;
        background-color: transparent;
        padding: 0;
    }

    .order-summary-card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .order-info {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1rem;
    }

    .info-label {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }

    .info-value {
        font-weight: 500;
        font-size: 1.1rem;
    }

    .address-section {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .product-card {
        background-color: #fff;
        border: 1px solid #eee;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1rem;
        transition: box-shadow 0.3s ease;
    }

    .product-card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 4px;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 4px;
        font-size: 0.875rem;
        font-weight: 500;
    }

   

    .payment-details {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1.5rem;
    }

    .payment-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.75rem;
    }

    .payment-label {
        color: #666;
    }

    .payment-value {
        font-weight: 500;
    }

  

    @media (max-width: 768px) {
        .main-container {
            padding: 0.5rem;
        }

        .order-info {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .product-image {
            width: 80px;
            height: 80px;
        }
    }
</style>
</head>
<body>
<div class="main-container">
    <!-- Header -->
    <div class="header-section">
        <div class="d-flex align-items-center">
            <a href="/orders" class="text-dark me-3">
                <i class="fas fa-arrow-left"></i>
            </a>
            <h1 class="mb-0 h4">Order Details</h1>
        </div>
    </div>

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/orders">Orders</a></li>
            <li class="breadcrumb-item active" aria-current="page">Order Details</li>
        </ol>
    </nav>

    <!-- Order Summary -->
    <div class="order-summary-card">
        <div class="order-info">
            <div>
                <div class="info-label">ORDER ID</div>
                <div class="info-value">#<%= order._id %></div>
            </div>
            <div>
                <div class="info-label">PLACED</div>
                <div class="info-value">
                    <%= new Date(order.orderDate).toLocaleDateString('en-US', { weekday: 'short', day: 'numeric', month: 'short' }) %>
                </div>
            </div>
            <div class="text-end">
                <div class="info-label">TOTAL</div>
                <div class="info-value">₹<%= order.total %></div>
            </div>
        </div>
    </div>

    <!-- Shipping Address -->
    <div class="address-section">
        <h2 class="h5 mb-3">Shipping address</h2>
        <div class="address-content">
            <div class="fw-bold mb-2"><%= order.address.name %></div>
            <div><%= order.address.address %></div>
            <div><%= order.address.locality %>, <%= order.address.district %></div>
            <div><%= order.address.state %> - <%= order.address.pincode %></div>
            <div class="mt-2">Phone: <%= order.address.phone %></div>
            <% if (order.address.alternatePhone) { %>
                <div>Alternate Phone: <%= order.address.alternatePhone %></div>
            <% } %>
        </div>
    </div>

    <!-- Order Items -->
    <h2 class="h5 mb-3">Order Items</h2>
    <% order.orderitems.forEach(orderItem => { %>
        <div class="product-card">
            <div class="d-flex">
                <div class="me-3">
                    <img src="/uploads/<%= orderItem.productId.images[0] %>" 
                         alt="<%= orderItem.productId.name %>" 
                         class="product-image">
                </div>
                <div class="flex-grow-1">
                    <h3 class="h6 mb-2"><%= orderItem.productId.name %></h3>
                    <div class="text-muted mb-1">Qty: <%= orderItem.originalQuantity %></div>
                    <div class="d-flex justify-content-between align-items-center mt-2">
                        <div class="price">
                            <% if (orderItem.productId.originalPrice) { %>
                                <span class="text-muted text-decoration-line-through me-2">
                                    ₹<%= orderItem.productId.originalPrice %>
                                </span>
                            <% } %>
                            <span class="fw-bold">₹<%= orderItem.productPrice %></span>
                        </div>
                        <div class="status-badge status-<%= orderItem.status.toLowerCase() %>">
                            <%= orderItem.status %>
                        </div>
                    </div>
                    <% if (orderItem.status === 'Pending' || orderItem.status === 'Processing') { %>
                        <div class="mt-3">
                            <a href="/cancelOrder/<%= order._id %>/<%= orderItem._id %>" 
                               class="btn btn-outline-danger btn-sm">
                                Cancel Item
                            </a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    <% }); %>

    <!-- Payment Details -->
    <div class="payment-details mt-4">
        <h2 class="h5 mb-3">Payment details</h2>
        <div class="payment-row">
            <div class="payment-label">Payment method</div>
            <div class="payment-value"><%= order.paymentMethod.toUpperCase() %></div>
        </div>
        <div class="payment-row">
            <div class="payment-label">Subtotal (Inclusive tax)</div>
            <div class="payment-value">₹<%= order.subtotal %></div>
        </div>
        <% if (order.discount) { %>
            <div class="payment-row text-danger">
                <div class="payment-label">Discount</div>
                <div class="payment-value">(-) ₹<%= order.discount %></div>
            </div>
        <% } %>
        <% if (order.shippingCharge) { %>
            <div class="payment-row">
                <div class="payment-label">Shipping Charge</div>
                <div class="payment-value">₹<%= order.shippingCharge %></div>
            </div>
        <% } %>
        <hr>
        <div class="payment-row fw-bold">
            <div>Total Amount</div>
            <div>₹<%= order.total %></div>
        </div>
    </div>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        //cancel order
        document.getElementById('cancelBtn').addEventListener('click', function (event) {
            event.preventDefault();
            const cancelUrl = this.href;
            const name = this.getAttribute('data-product-name');
            Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to cancel the order for "${name}"?`,
                showCancelButton: true,
                confirmButtonColor: '#1cc0a0',
                cancelButtonColor: '',
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = cancelUrl;
                }
            });
        });


        //return order
    // document.getElementById('returnBtn').addEventListener('click', function (event) {
    //     event.preventDefault();
    //     console.log('1')
    //     const orderId = this.getAttribute('data-order-id');
    //     const orderItemId = this.getAttribute('data-order-item-id');
    //     console.log(`Order ID: ${orderId}, Order Item ID: ${orderItemId}`);
    //     if (orderId && orderItemId) {
    //     const returnUrl = `/returnPage?orderId=${orderId}&orderItemId=${orderItemId}`;
    //     console.log('Navigating to:', returnUrl); 
    //     window.location.href = returnUrl;
    // } else {
    //     console.error("Order ID or Order Item ID is missing.");
    // }
    // })
});
    </script>
    
    <%- include('../layouts/footer') %>
</body>
</html>